{"version":3,"sources":["store/actions.ts","store/selectors.ts","components/Header.tsx","components/Footer.tsx","components/PDP.tsx","components/PLP.tsx","App.tsx","reportWebVitals.js","store/store.ts","index.tsx"],"names":["productsSlice","createSlice","name","initialState","searchFilter","selectedFilter","products","reducers","setSelectedFilter","state","action","payload","setSearchFilter","setProducts","productsActions","actions","selectedFilterSelector","searchFilterSelector","productsSelector","SearchBarWrapper","styled","div","Input","input","Label","label","ResetButton","button","RippleContainer","props","color","duration","Ripple","useState","rippleArray","setRippleArray","rippleCount","cleanUpFunction","useLayoutEffect","bounce","clearTimeout","setTimeout","useDebouncedRippleCleanUp","length","onMouseDown","event","rippleContainer","currentTarget","getBoundingClientRect","size","width","height","newRipple","x","pageX","y","pageY","map","ripple","index","style","top","left","SearchBox","searchTerm","useSelector","dispatch","useDispatch","ResetButtonWrapper","id","onClick","value","onChange","e","target","className","ToggleButton","ToggleButtonsWrapper","ToggleButtons","selected","GridDiv","BoxDiv","Header","src","alt","Link","a","Footer","href","ExtGridDiv","ContainerGrid","Title","gridArea","VariantGridDiv","VariantImage","img","ProdDetGrid","VariantTitle","title","DetImage","DetElement","h1","ProdDet","product","price","current","availability","stock","UPC","ProductDetailsCard","ProductDetails","useParams","find","prod","React","variant","setVariant","temp","setTemp","VariantCard","onMouseEnter","onMouseLeave","variants","ProdGridDiv","Chip","InStockChip","Card","CardDes","Text","p","Image","ProductCard","history","useHistory","push","ProductList","filter","toLowerCase","includes","_","App","fetch","then","res","json","prods","vars","va","console","log","path","component","exact","PLP","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.02b138e5.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { stockFilter, stateModel, ProductType } from '../model/models';\r\n\r\nconst initialState: stateModel = {\r\n    searchFilter: \"\",\r\n    selectedFilter: \"none\",\r\n    products: []\r\n};\r\n\r\nexport const productsSlice = createSlice({\r\n  name: 'SET_STATE',\r\n  initialState,\r\n  reducers: {\r\n    setSelectedFilter: (state: stateModel, action: PayloadAction<stockFilter>) => {\r\n      state.selectedFilter = action.payload;\r\n    },\r\n    setSearchFilter: (state: stateModel, action: PayloadAction<string>) => {\r\n      state.searchFilter = action.payload;\r\n    },\r\n    setProducts: (state: stateModel, action: PayloadAction<ProductType[]>) => {\r\n      state.products = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const productsActions = productsSlice.actions;\r\nexport default productsSlice.reducer;","import { RootState } from './store';\r\n\r\nexport const selectedFilterSelector = (state: RootState) => state.productsSlice.selectedFilter;\r\nexport const searchFilterSelector = (state: RootState) => state.productsSlice.searchFilter;\r\nexport const productsSelector = (state: RootState) => state.productsSlice.products;","import React, { useState, useLayoutEffect } from \"react\";\r\nimport styled from 'styled-components';\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { productsActions } from '../store/actions';\r\nimport { searchFilterSelector, selectedFilterSelector } from \"../store/selectors\";\r\n\r\nconst SearchBarWrapper = styled.div`\r\n    position: relative;\r\n    margin-top: 8px;\r\n    margin-left: 10px;\r\n    display: flex;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    font-size: 17px;\r\n    padding: 10px;\r\n    display: block;\r\n    height: 34px;\r\n    width: 21vw;\r\n    border: 1px solid rgb(100,100,100,0.5);\r\n    border-radius: 3px;\r\n    &:focus {\r\n      outline: none;\r\n      border: 2px solid #1976D2;\r\n    }\r\n`;\r\n\r\nconst Label = styled.label`\r\n    color: gray;\r\n    font-size: 18px;\r\n    font-weight: normal;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    left: 13px;\r\n    top: 13px;\r\n    transition: 0.2s ease all;\r\n    ${Input}:focus ~ & {\r\n      top: -10px;\r\n      font-size: 13px;\r\n      color: #1976D2;\r\n      background-color: white;\r\n      width: 40px;\r\n      padding-left: 5px;\r\n    }\r\n\r\n    &.up {\r\n      top: -10px;\r\n      font-size: 13px;\r\n      color: #1976D2;\r\n      background-color: white;\r\n      width: 40px;\r\n      padding-left: 5px;\r\n    }\r\n`;\r\n\r\nconst ResetButton = styled.button `\r\n    background-color: rgb(25, 118, 210);\r\n    position: relative;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 15px;\r\n    border-radius: 3px;\r\n    font-size: 14px;\r\n    height: 35px;\r\n    margin-top: 8px;\r\n    margin-left: 15px;\r\n    cursor: pointer;\r\n    transition: 0.4s;\r\n    box-shadow: 1px 2px 2px -1px grey;\r\n\r\n    &:hover {\r\n      background-color: rgb(21, 101, 192);\r\n      box-shadow: 1px 2px 10px -1px grey;\r\n    }\r\n\r\n    &:active {\r\n      box-shadow: 0px 10px 15px -1px grey;\r\n      opacity: 0.7;\r\n      transition: 0.5s;\r\n    }\r\n`;\r\n\r\nconst RippleContainer = styled.div<any>`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  overflow: hidden;\r\n\r\n  span {\r\n    transform: scale(0);\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    opacity: 0.75;\r\n    background-color: ${props => props.color};\r\n    animation-name: ripple;\r\n    animation-duration: ${props => props.duration}ms;\r\n  }\r\n\r\n  @keyframes ripple {\r\n    to {\r\n      opacity: 0;\r\n      transform: scale(2);\r\n    }\r\n  }\r\n`;\r\n\r\nconst useDebouncedRippleCleanUp = (rippleCount: number, duration: number, cleanUpFunction:()=>void) => {\r\n  useLayoutEffect(() => {\r\n    let bounce: null | NodeJS.Timeout = null;\r\n    if (rippleCount > 0) {\r\n      bounce && clearTimeout(bounce);\r\n\r\n      bounce = setTimeout(() => {\r\n        cleanUpFunction();\r\n        bounce && clearTimeout(bounce);\r\n      }, duration * 4);\r\n    }\r\n\r\n    return () => {bounce && clearTimeout(bounce)};\r\n  }, [rippleCount, duration, cleanUpFunction]);\r\n};\r\n\r\nconst Ripple = ({ duration = 850, color = \"#fff\" }) => {\r\n  const [rippleArray, setRippleArray] = useState<any>([]);\r\n\r\n  useDebouncedRippleCleanUp(rippleArray.length, duration, () => {\r\n    setRippleArray([]);\r\n  });\r\n\r\n  const addRipple = (event:any) => {\r\n    const rippleContainer = event.currentTarget.getBoundingClientRect();\r\n    const size =\r\n      rippleContainer.width > rippleContainer.height\r\n        ? rippleContainer.width\r\n        : rippleContainer.height;\r\n    const x = event.pageX - rippleContainer.x - size / 2;\r\n    const y = event.pageY - rippleContainer.y - size / 2;\r\n    const newRipple = {\r\n      x,\r\n      y,\r\n      size\r\n    };\r\n\r\n    setRippleArray([...rippleArray, newRipple]);\r\n  };\r\n\r\n  return (\r\n    <RippleContainer duration={duration} color={color} onMouseDown={addRipple}>\r\n      {rippleArray.length > 0 &&\r\n        rippleArray.map((ripple:any, index: number) => {\r\n          return (\r\n            <span\r\n              key={\"span\" + index}\r\n              style={{\r\n                top: ripple.y,\r\n                left: ripple.x,\r\n                width: ripple.size,\r\n                height: ripple.size\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n    </RippleContainer>\r\n  );\r\n};\r\n\r\nRipple.propTypes = {\r\n  duration: PropTypes.number,\r\n  color: PropTypes.string\r\n};\r\n\r\nconst SearchBox: React.FC = () => {\r\n  const searchTerm = useSelector(searchFilterSelector);\r\n  const dispatch = useDispatch();\r\n\r\n  const ResetButtonWrapper: React.FC = () => {\r\n    return (\r\n    <ResetButton id=\"reset\" onClick={() => dispatch(productsActions.setSearchFilter(\"\"))} >\r\n      RESET\r\n      <Ripple color=\"rgb(255,2555,255,0.5)\"/>\r\n    </ResetButton>\r\n  )};\r\n\r\n  return (\r\n  <SearchBarWrapper>\r\n    <Input value={searchTerm} onChange={(e) => dispatch(productsActions.setSearchFilter(e.target.value))} />\r\n    <Label className={searchTerm===\"\" ? \"\" : \"up\"}>search</Label>\r\n    <ResetButtonWrapper />\r\n  </SearchBarWrapper>\r\n)};\r\n\r\nconst ToggleButton = styled.button`\r\n  background-color: white;\r\n  color: rgb(21, 101, 192, 0.9);\r\n  padding: 10px 15px;\r\n  box-shadow: 0px 1.5px #888888;\r\n  font-weight: 500;\r\n  font-size: 0.875rem;\r\n  height: 36px;\r\n  min-width: 64px;\r\n  padding: 5px 15px;\r\n  line-height: 1.75;\r\n  letter-spacing: 0.02857em;\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &.in {\r\n    border-top-left-radius: 4px;\r\n    border-bottom-left-radius: 4px;\r\n    border: 1px solid rgb(21, 101, 192);\r\n  }\r\n\r\n  &.out {\r\n    border-top-right-radius: 4px;\r\n    border-bottom-right-radius: 4px;\r\n    border: 1px solid rgb(21, 101, 192, 0.5);\r\n  }\r\n\r\n  &:hover {\r\n    background-color: rgb(21, 101, 192, 0.1);\r\n    cursor: pointer;\r\n    border: 1px solid rgb(21, 101, 192);\r\n  }\r\n\r\n  &.active {\r\n    background-color: rgb(21, 101, 192, 0.9);\r\n    color: white;\r\n\r\n    &:hover {\r\n      background-color: rgb(21, 101, 192);\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1230px) {\r\n    height: 72px;\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nconst ToggleButtonsWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 22px;\r\n\r\n  @media (max-width: 1230px) {\r\n    margin: 5px;\r\n  }\r\n`;\r\n\r\nconst ToggleButtons: React.FC = () => {\r\n  const selected = useSelector(selectedFilterSelector);\r\n  const dispatch = useDispatch();\r\n  \r\n  return (\r\n  <ToggleButtonsWrapper>\r\n    <ToggleButton className={selected===\"in\" ? \"in active\" : \"in\"}\r\n      onClick={() => \r\n        selected === \"in\"\r\n        ? dispatch(productsActions.setSelectedFilter(\"none\"))\r\n        : dispatch(productsActions.setSelectedFilter(\"in\"))}\r\n    >IN STOCK<Ripple/></ToggleButton>\r\n    <ToggleButton className={selected===\"out\" ? \"out active\" : \"out\"}\r\n      onClick={() => \r\n        selected === \"out\"\r\n        ? dispatch(productsActions.setSelectedFilter(\"none\"))\r\n        : dispatch(productsActions.setSelectedFilter(\"out\"))}\r\n    >OUT OF STOCK<Ripple/></ToggleButton>\r\n  </ToggleButtonsWrapper>\r\n)};\r\n\r\nconst GridDiv = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 30% 35% 35%;\r\n`;\r\n\r\nconst BoxDiv = styled.div`\r\n  border-bottom: 1px solid black;\r\n`;\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <BoxDiv>\r\n      <GridDiv>\r\n        <img src=\"https://via.placeholder.com/150x80\" alt=\"logo\" />\r\n        <ToggleButtons />\r\n        <SearchBox />\r\n      </GridDiv>\r\n    </BoxDiv>\r\n  );\r\n}\r\n\r\nexport default Header;","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst BoxDiv = styled.div`\r\n    background-color: darkgray;\r\n    text-align: right;\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n    padding: 25px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Link = styled.a`\r\n    color: blue;\r\n    text-decoration: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n  \r\nconst Footer: React.FC = () => {\r\n    return (\r\n        <BoxDiv>\r\n            <Link href='https://static.wikia.nocookie.net/5ef5d627-c162-4309-ab47-e09f6b411883'>\r\n                TWITTER</Link> | \r\n            <Link href='https://i.pinimg.com/originals/d8/90/92/d890923215813484bdc0f9544aeca1a9.gif'>\r\n                FACEBOOK</Link>\r\n        </BoxDiv>\r\n    );\r\n}\r\n\r\nexport default Footer;","import * as React from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ProductType } from '../model/models';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { productsSelector } from '../store/selectors';\r\n\r\nconst ExtGridDiv = styled.div`\r\n    min-height: 100vh;\r\n    position: relative;\r\n`;\r\n\r\nconst ContainerGrid = styled.div`\r\n    width: 97%;\r\n    margin: 16px auto 0 auto;\r\n    padding: 10px 20px;\r\n`;\r\n\r\nconst Title: React.FC = () => {\r\n    return (\r\n        <h3 style={{gridArea: 'title'}}>Available colors:</h3>\r\n    );\r\n}\r\n\r\nconst VariantGridDiv = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(8, 1fr);\r\n    row-gap: 15px;\r\n`;\r\n\r\nconst VariantImage = styled.img`\r\n    cursor: pointer;\r\n    width: 200px;\r\n    height: 100px;\r\n`;\r\n\r\nconst ProdDetGrid = styled.div`\r\n    display: grid;\r\n    grid-template-areas: \r\n        'title title title title title'\r\n        'img   det   det   det   det  ';\r\n    width: 80%;\r\n    margin-top: -35px;\r\n`;\r\n\r\nconst VariantTitle: React.FC<{title: string}> = ({title}) => {\r\n    return (\r\n        <h1 style={{gridArea: 'title'}}>{title}</h1>\r\n    );\r\n}\r\n\r\nconst DetImage = styled.img`\r\n    grid-area: 'img';\r\n`;\r\n\r\nconst DetElement = styled.h1`\r\n    font-size: 18px;\r\n    color: gray;\r\n    display: flexbox;\r\n\r\n    & > span {\r\n        font-weight: bold;\r\n        color: black;\r\n    }\r\n`;\r\n\r\nconst ProdDet: React.FC<{product: ProductType | Omit<ProductType, \"variants\"> | undefined}> = ({ product }) => {\r\n    return (\r\n        <div>\r\n            <DetElement>Name: <span>{product ? product.name : \"\"}</span></DetElement>\r\n            <DetElement>Price: <span>{product ? product.price.current.value : \"\"}$</span></DetElement>\r\n            <DetElement>Stock: <span>{product ? product.availability.stock : \"\"}</span></DetElement>\r\n            <DetElement>UPC: <span>{product ? product.UPC : \"\"}</span></DetElement>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const ProductDetailsCard:\r\n    React.FC<{product: ProductType | Omit<ProductType, \"variants\"> | undefined}> = ({ product }) => {\r\n    return (\r\n        <div>\r\n            <ProdDetGrid>\r\n                <VariantTitle title={product ? product.name : \"\"} />\r\n                <DetImage alt={ `img${product?.UPC}` } src={product?.img} />\r\n                <ProdDet product={product} />\r\n            </ProdDetGrid>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProductDetails: React.FC = () => {\r\n    const { id } = useParams<{ id : string }>();\r\n    var product = useSelector(productsSelector).find((prod:ProductType) => prod.UPC===id);\r\n    const [variant, setVariant] = \r\n        React.useState<ProductType | Omit<ProductType, \"variants\">>();\r\n    const [temp, setTemp] = \r\n        React.useState<ProductType | Omit<ProductType, \"variants\"> | undefined>();\r\n\r\n    React.useEffect(() => {\r\n        setVariant(product);\r\n        setTemp(product);\r\n    }, [product]);\r\n\r\n    const VariantCard:React.FC<{product: ProductType | Omit<ProductType, \"variants\">}>=({product}) => {\r\n        return (\r\n            <VariantImage src={ product.img }\r\n                onMouseEnter={ () => setVariant(product) }\r\n                onMouseLeave={ () => setVariant(temp) }\r\n                onClick={ () => setTemp(product) } />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ExtGridDiv>\r\n            <Header />\r\n            {product && variant ?\r\n            <ContainerGrid>    \r\n                <ProductDetailsCard product={variant} />\r\n                <Title />\r\n                <VariantGridDiv>\r\n                    <VariantCard product={product} />\r\n                    {product?.variants?.map((prod) => \r\n                        <VariantCard product={prod} key={prod.UPC} />)}\r\n                </VariantGridDiv>\r\n            </ContainerGrid> : null}\r\n            <Footer />\r\n        </ExtGridDiv>\r\n    );\r\n}\r\n\r\nexport default ProductDetails;","import * as React from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport styled from 'styled-components';\r\nimport { ProductType } from '../model/models';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectedFilterSelector, searchFilterSelector, productsSelector } from '../store/selectors';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ExtGridDiv = styled.div`\r\n    min-height: 100vh;\r\n    position: relative;\r\n`;\r\n\r\nconst ContainerGrid = styled.div`\r\n    width: 99%;\r\n    margin: 16px auto 0 auto;\r\n    padding-bottom: 90px;\r\n`;\r\n\r\nconst ProdGridDiv = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    row-gap: 15px;\r\n`;\r\n\r\nconst Chip = styled.div`\r\n    background-color: rgb(204, 204, 204, 0.4);\r\n    padding: 8px 12px 8px 12px;\r\n    border-radius: 20px;\r\n    font-size: 13px;\r\n    width: 45px;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst InStockChip: React.FC = () => (\r\n    <Chip>\r\n        in stock\r\n    </Chip>\r\n)\r\n\r\nconst Card = styled.div`\r\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\r\n    width: 97%;\r\n    margin: 0 auto;\r\n    border-bottom-left-radius: 4px;\r\n    border-bottom-right-radius: 4px;\r\n    max-height: 62vh;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst CardDes = styled.div`\r\n    margin-top: -5px;\r\n    padding-left: 15px;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst Text = styled.p`\r\n    &.name {\r\n        font-family: Roboto, Helvetica, Arial, sans-serif;\r\n        margin: 0;\r\n        padding-top: 12px;\r\n        font-weight: 400;\r\n        font-size: 1.5rem;\r\n        line-height: 1.334;\r\n        letter-spacing: 0em;\r\n        padding-top: 12px;\r\n    }\r\n\r\n    &.price {\r\n        font-size: 20px;\r\n        color: grey;\r\n    }\r\n`;\r\n\r\nconst Image = styled.img`\r\n    width: 100%;\r\n    border-top-left-radius: 4px;\r\n    border-top-right-radius: 4px;\r\n`;\r\n\r\nconst ProductCard: React.FC<{product: ProductType}> = ({ product }) => {\r\n    var history = useHistory();\r\n    return (\r\n        <Card onClick={()=>{history.push(`/prod/${product.UPC}`)}}>\r\n            <Image src={product.img} alt={`prodImg${product.UPC}`} />\r\n            <CardDes>\r\n                <Text className=\"name\">{product.name}</Text>\r\n                <Text className=\"price\">{product.price.current.value}$</Text>\r\n                {product.availability.stock > 0 && <InStockChip />}\r\n            </CardDes>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst ProductList: React.FC = () => {\r\n    const selected = useSelector(selectedFilterSelector);\r\n    const searchTerm = useSelector(searchFilterSelector);\r\n    const products = useSelector(productsSelector);\r\n\r\n    return (\r\n        <ExtGridDiv>\r\n            <Header />\r\n            <ContainerGrid>\r\n                <ProdGridDiv>\r\n                    {products && products\r\n                    .filter((product: ProductType)=>{\r\n                        switch(selected) {\r\n                        case \"in\":\r\n                            return product.availability.stock>0;\r\n                        case \"out\":\r\n                            return product.availability.stock<=0;\r\n                        default:\r\n                            return true;\r\n                        }\r\n                    })\r\n                    .filter((product: ProductType)=>{return product.name.toLowerCase().includes(searchTerm.toLowerCase())})\r\n                    .map((product: ProductType, _: number) => (\r\n                        <ProductCard product={product} key={product.UPC} />\r\n                    ))}\r\n                </ProdGridDiv>\r\n            </ContainerGrid>\r\n            <Footer />\r\n        </ExtGridDiv>\r\n    );\r\n}\r\n\r\nexport default ProductList;","import './App.css';\r\nimport * as React from 'react';\r\nimport ProductDetails from './components/PDP';\r\nimport PLP from './components/PLP';\r\nimport {\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { productsActions } from './store/actions';\r\nimport { ProductType } from './model/models';\r\n\r\nconst App : React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    fetch(\r\n      \"https://assets.fc-dev.instore.oakley.com/assets/products/products.json\"\r\n    )\r\n    .then((res) => res.json())\r\n    .then((products) => {\r\n      const prods = products.map((prod : Omit<ProductType, \"img\">) => {\r\n        const vars = prod.variants.map((va : Omit<ProductType, \"variants\">) => {\r\n          return {\r\n            UPC: va.UPC,\r\n            name: va.name,\r\n            price: va.price,\r\n            availability: va.availability,\r\n            img: `https://picsum.photos/800/400?random=${va.UPC}`\r\n          }\r\n        });\r\n\r\n        return {\r\n          UPC: prod.UPC,\r\n          name: prod.name,\r\n          price: prod.price,\r\n          availability: prod.availability,\r\n          img: `https://picsum.photos/800/400?random=${prod.UPC}`,\r\n          variants: vars\r\n        };\r\n      })\r\n\r\n      console.log(\"prods\", prods);\r\n      dispatch(productsActions.setProducts(prods));\r\n    });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/prod/:id\" component={ProductDetails} />\r\n      <Route exact path=\"/\" component={PLP} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport productsSlice from './actions';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    productsSlice\r\n  },\r\n})\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename='/ecommercestyle'>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}