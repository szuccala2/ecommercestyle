{"version":3,"sources":["components/Prove.tsx","store/actions.ts","store/selectors.ts","components/Header.tsx","components/Footer.tsx","components/Product.tsx","components/Functions.tsx","components/ProductDetails.tsx","components/PLP.tsx","App.tsx","reportWebVitals.js","store/store.ts","index.tsx"],"names":["Grid","styled","div","Uno","style","gridArea","textAlign","Due","Tre","Quattro","Prova","filterSlice","createSlice","name","initialState","searchFilter","selectedFilter","reducers","setSelectedFilter","state","action","payload","setSearchFilter","filterSliceActions","actions","selectedFilterSelector","searchFilterSelector","SearchBarWrapper","Input","input","Label","label","ResetButton","button","RippleContainer","props","color","duration","Ripple","useState","rippleArray","setRippleArray","rippleCount","cleanUpFunction","useLayoutEffect","bounce","clearTimeout","setTimeout","useDebouncedRippleCleanUp","length","onMouseDown","event","rippleContainer","currentTarget","getBoundingClientRect","size","width","height","newRipple","x","pageX","y","pageY","map","ripple","index","top","left","SearchBox","searchTerm","useSelector","dispatch","useDispatch","ResetButtonWrapper","id","onClick","value","onChange","e","target","className","ToggleButton","ToggleButtonsWrapper","ToggleButtons","selected","GridDiv","BoxDiv","Header","src","alt","Link","a","Footer","href","Chip","InStockChip","Card","CardDes","Text","p","Image","img","ProductCard","product","history","useHistory","push","UPC","price","current","availability","stock","ProdDetGrid","Title","title","DetImage","DetElement","h1","ProdDet","ProductDetailsCard","useProducts","React","products","setProducts","fetch","then","res","json","ExtGridDiv","ContainerGrid","VariantGridDiv","VariantImage","ProductDetails","useParams","find","prod","variant","setVariant","temp","setTemp","VariantCard","onMouseEnter","onMouseLeave","variants","ProdGridDiv","ProductList","filter","toLowerCase","includes","_","App","path","component","exact","PLP","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.7fa41820.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Grid = styled.div`\r\n    display: grid;\r\n    grid-template-areas: \r\n        'uno uno uno uno'\r\n        'due due due tre'\r\n        'qua qua qua qua';\r\n    grid-gap: 10px;\r\n    background-color: blue;\r\n    padding: 10px;\r\n    width: 500px;\r\n\r\n    & > div {\r\n        background-color: lightblue;\r\n    }\r\n`;\r\n\r\nconst Uno: React.FC = () => {\r\n    return (\r\n        <div style={{gridArea: 'uno', textAlign: 'center'}}>\r\n            Uno\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Due: React.FC = () => {\r\n    return (\r\n        <div style={{gridArea: 'due', textAlign: 'center'}}>\r\n            Due\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Tre: React.FC = () => {\r\n    return (\r\n        <div style={{gridArea: 'tre', textAlign: 'center'}}>\r\n            Tre\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Quattro: React.FC = () => {\r\n    return (\r\n        <div style={{gridArea: 'qua', textAlign: 'center'}}>\r\n            Quattro\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Prova: React.FC = () => {\r\n    return (\r\n        <Grid>\r\n            <Uno />\r\n            <Due />\r\n            <Tre />\r\n            <Quattro />\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Prova;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { stockFilter, stateModel } from '../model/models';\r\n\r\nconst initialState: stateModel = {\r\n    searchFilter: \"\",\r\n    selectedFilter: \"none\"\r\n};\r\n\r\nexport const filterSlice = createSlice({\r\n  name: 'SET_STATE',\r\n  initialState,\r\n  reducers: {\r\n    setSelectedFilter: (state: stateModel, action: PayloadAction<stockFilter>) => {\r\n      state.selectedFilter = action.payload;\r\n    },\r\n    setSearchFilter: (state: stateModel, action: PayloadAction<string>) => {\r\n      state.searchFilter = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const filterSliceActions = filterSlice.actions;\r\nexport default filterSlice.reducer;","import { RootState } from './store';\r\n\r\nexport const selectedFilterSelector = (state: RootState) => state.filterSlice.selectedFilter;\r\nexport const searchFilterSelector = (state: RootState) => state.filterSlice.searchFilter;","import React, { useState, useLayoutEffect } from \"react\";\r\nimport styled from 'styled-components';\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { filterSliceActions } from '../store/actions';\r\nimport { searchFilterSelector, selectedFilterSelector } from \"../store/selectors\";\r\n\r\nconst SearchBarWrapper = styled.div`\r\n    position: relative;\r\n    margin-top: 8px;\r\n    margin-left: 10px;\r\n    display: flex;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    font-size: 17px;\r\n    padding: 10px;\r\n    display: block;\r\n    height: 34px;\r\n    width: 21vw;\r\n    border: 1px solid rgb(100,100,100,0.5);\r\n    border-radius: 3px;\r\n    &:focus {\r\n      outline: none;\r\n      border: 2px solid #1976D2;\r\n    }\r\n`;\r\n\r\nconst Label = styled.label`\r\n    color: gray;\r\n    font-size: 18px;\r\n    font-weight: normal;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    left: 13px;\r\n    top: 13px;\r\n    transition: 0.2s ease all;\r\n    ${Input}:focus ~ & {\r\n      top: -10px;\r\n      font-size: 13px;\r\n      color: #1976D2;\r\n      background-color: white;\r\n      width: 40px;\r\n      padding-left: 5px;\r\n    }\r\n\r\n    &.up {\r\n      top: -10px;\r\n      font-size: 13px;\r\n      color: #1976D2;\r\n      background-color: white;\r\n      width: 40px;\r\n      padding-left: 5px;\r\n    }\r\n`;\r\n\r\nconst ResetButton = styled.button `\r\n    background-color: rgb(25, 118, 210);\r\n    position: relative;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 15px;\r\n    border-radius: 3px;\r\n    font-size: 14px;\r\n    height: 35px;\r\n    margin-top: 8px;\r\n    margin-left: 15px;\r\n    cursor: pointer;\r\n    transition: 0.4s;\r\n    box-shadow: 1px 2px 2px -1px grey;\r\n\r\n    &:hover {\r\n      background-color: rgb(21, 101, 192);\r\n      box-shadow: 1px 2px 10px -1px grey;\r\n    }\r\n\r\n    &:active {\r\n      box-shadow: 0px 10px 15px -1px grey;\r\n      opacity: 0.7;\r\n      transition: 0.5s;\r\n    }\r\n`;\r\n\r\nconst RippleContainer = styled.div<any>`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  overflow: hidden;\r\n\r\n  span {\r\n    transform: scale(0);\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    opacity: 0.75;\r\n    background-color: ${props => props.color};\r\n    animation-name: ripple;\r\n    animation-duration: ${props => props.duration}ms;\r\n  }\r\n\r\n  @keyframes ripple {\r\n    to {\r\n      opacity: 0;\r\n      transform: scale(2);\r\n    }\r\n  }\r\n`;\r\n\r\nconst useDebouncedRippleCleanUp = (rippleCount: number, duration: number, cleanUpFunction:any) => {\r\n  useLayoutEffect(() => {\r\n    let bounce: any = null;\r\n    if (rippleCount > 0) {\r\n      clearTimeout(bounce);\r\n\r\n      bounce = setTimeout(() => {\r\n        cleanUpFunction();\r\n        clearTimeout(bounce);\r\n      }, duration * 4);\r\n    }\r\n\r\n    return () => clearTimeout(bounce);\r\n  }, [rippleCount, duration, cleanUpFunction]);\r\n};\r\n\r\nconst Ripple = ({ duration = 850, color = \"#fff\" }) => {\r\n  const [rippleArray, setRippleArray] = useState<any>([]);\r\n\r\n  useDebouncedRippleCleanUp(rippleArray.length, duration, () => {\r\n    setRippleArray([]);\r\n  });\r\n\r\n  const addRipple = (event:any) => {\r\n    const rippleContainer = event.currentTarget.getBoundingClientRect();\r\n    const size =\r\n      rippleContainer.width > rippleContainer.height\r\n        ? rippleContainer.width\r\n        : rippleContainer.height;\r\n    const x = event.pageX - rippleContainer.x - size / 2;\r\n    const y = event.pageY - rippleContainer.y - size / 2;\r\n    const newRipple = {\r\n      x,\r\n      y,\r\n      size\r\n    };\r\n\r\n    setRippleArray([...rippleArray, newRipple]);\r\n  };\r\n\r\n  return (\r\n    <RippleContainer duration={duration} color={color} onMouseDown={addRipple}>\r\n      {rippleArray.length > 0 &&\r\n        rippleArray.map((ripple:any, index:any) => {\r\n          return (\r\n            <span\r\n              key={\"span\" + index}\r\n              style={{\r\n                top: ripple.y,\r\n                left: ripple.x,\r\n                width: ripple.size,\r\n                height: ripple.size\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n    </RippleContainer>\r\n  );\r\n};\r\n\r\nRipple.propTypes = {\r\n  duration: PropTypes.number,\r\n  color: PropTypes.string\r\n};\r\n\r\nconst SearchBox: React.FC = () => {\r\n  const searchTerm = useSelector(searchFilterSelector);\r\n  const dispatch = useDispatch();\r\n\r\n  const ResetButtonWrapper: React.FC = () => {\r\n    return (\r\n    <ResetButton id=\"reset\" onClick={() => dispatch(filterSliceActions.setSearchFilter(\"\"))} >\r\n      RESET\r\n      <Ripple color=\"rgb(255,2555,255,0.5)\"/>\r\n    </ResetButton>\r\n  )};\r\n\r\n  return (\r\n  <SearchBarWrapper>\r\n    <Input value={searchTerm} onChange={(e) => dispatch(filterSliceActions.setSearchFilter(e.target.value))} />\r\n    <Label className={searchTerm===\"\" ? \"\" : \"up\"}>search</Label>\r\n    <ResetButtonWrapper />\r\n  </SearchBarWrapper>\r\n)};\r\n\r\nconst ToggleButton = styled.button`\r\n  background-color: white;\r\n  color: rgb(21, 101, 192, 0.9);\r\n  padding: 10px 15px;\r\n  box-shadow: 0px 1.5px #888888;\r\n  font-weight: 500;\r\n  font-size: 0.875rem;\r\n  height: 36px;\r\n  min-width: 64px;\r\n  padding: 5px 15px;\r\n  line-height: 1.75;\r\n  letter-spacing: 0.02857em;\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &.in {\r\n    border-top-left-radius: 4px;\r\n    border-bottom-left-radius: 4px;\r\n    border: 1px solid rgb(21, 101, 192);\r\n  }\r\n\r\n  &.out {\r\n    border-top-right-radius: 4px;\r\n    border-bottom-right-radius: 4px;\r\n    border: 1px solid rgb(21, 101, 192, 0.5);\r\n  }\r\n\r\n  &:hover {\r\n    background-color: rgb(21, 101, 192, 0.1);\r\n    cursor: pointer;\r\n    border: 1px solid rgb(21, 101, 192);\r\n  }\r\n\r\n  &.active {\r\n    background-color: rgb(21, 101, 192, 0.9);\r\n    color: white;\r\n\r\n    &:hover {\r\n      background-color: rgb(21, 101, 192);\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1230px) {\r\n    height: 72px;\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nconst ToggleButtonsWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 22px;\r\n\r\n  @media (max-width: 1230px) {\r\n    margin: 5px;\r\n  }\r\n`;\r\n\r\nconst ToggleButtons: React.FC = () => {\r\n  const selected = useSelector(selectedFilterSelector);\r\n  const dispatch = useDispatch();\r\n  \r\n  return (\r\n  <ToggleButtonsWrapper>\r\n    <ToggleButton className={selected===\"in\" ? \"in active\" : \"in\"}\r\n      onClick={() => \r\n        selected === \"in\"\r\n        ? dispatch(filterSliceActions.setSelectedFilter(\"none\"))\r\n        : dispatch(filterSliceActions.setSelectedFilter(\"in\"))}\r\n    >IN STOCK<Ripple/></ToggleButton>\r\n    <ToggleButton className={selected===\"out\" ? \"out active\" : \"out\"}\r\n      onClick={() => \r\n        selected === \"out\"\r\n        ? dispatch(filterSliceActions.setSelectedFilter(\"none\"))\r\n        : dispatch(filterSliceActions.setSelectedFilter(\"out\"))}\r\n    >OUT OF STOCK<Ripple/></ToggleButton>\r\n  </ToggleButtonsWrapper>\r\n)};\r\n\r\nconst GridDiv = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 30% 35% 35%;\r\n`;\r\n\r\nconst BoxDiv = styled.div`\r\n  border-bottom: 1px solid black;\r\n`;\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <BoxDiv>\r\n      <GridDiv>\r\n        <img src=\"https://via.placeholder.com/150x80\" alt=\"logo\" />\r\n        <ToggleButtons />\r\n        <SearchBox />\r\n      </GridDiv>\r\n    </BoxDiv>\r\n  );\r\n}\r\n\r\nexport default Header;","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst BoxDiv = styled.div`\r\n    background-color: darkgray;\r\n    text-align: right;\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n    padding: 25px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Link = styled.a`\r\n    color: blue;\r\n    text-decoration: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n  \r\nconst Footer: React.FC = () => {\r\n    return (\r\n        <BoxDiv>\r\n            <Link href='https://static.wikia.nocookie.net/5ef5d627-c162-4309-ab47-e09f6b411883'>\r\n                TWITTER</Link> | \r\n            <Link href='https://i.pinimg.com/originals/d8/90/92/d890923215813484bdc0f9544aeca1a9.gif'>\r\n                FACEBOOK</Link>\r\n        </BoxDiv>\r\n    );\r\n}\r\n\r\nexport default Footer;","import * as React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ProductType } from '../model/models';\r\nimport styled from 'styled-components';\r\n\r\nconst Chip = styled.div`\r\n    background-color: rgb(204, 204, 204, 0.4);\r\n    padding: 8px 12px 8px 12px;\r\n    border-radius: 20px;\r\n    font-size: 13px;\r\n    width: 45px;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst InStockChip: React.FC = () => (\r\n    <Chip>\r\n        in stock\r\n    </Chip>\r\n)\r\n\r\nconst Card = styled.div`\r\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\r\n    width: 97%;\r\n    margin: 0 auto;\r\n    border-bottom-left-radius: 4px;\r\n    border-bottom-right-radius: 4px;\r\n    max-height: 62vh;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst CardDes = styled.div`\r\n    margin-top: -5px;\r\n    padding-left: 15px;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst Text = styled.p`\r\n    &.name {\r\n        font-family: Roboto, Helvetica, Arial, sans-serif;\r\n        margin: 0;\r\n        padding-top: 12px;\r\n        font-weight: 400;\r\n        font-size: 1.5rem;\r\n        line-height: 1.334;\r\n        letter-spacing: 0em;\r\n        padding-top: 12px;\r\n    }\r\n\r\n    &.price {\r\n        font-size: 20px;\r\n        color: grey;\r\n    }\r\n`;\r\n\r\nconst Image = styled.img`\r\n    width: 100%;\r\n    border-top-left-radius: 4px;\r\n    border-top-right-radius: 4px;\r\n`;\r\n\r\nexport const ProductCard: React.FC<{product: ProductType}> = ({ product }) => {\r\n    var history = useHistory();\r\n    return (\r\n        <Card onClick={()=>{history.push(`/prod/${product.UPC}`)}}>\r\n            <Image src=\"https://via.placeholder.com/350\" alt=\"prodImg\" />\r\n            <CardDes>\r\n                <Text className=\"name\">{product.name}</Text>\r\n                <Text className=\"price\">{product.price.current.value}$</Text>\r\n                {product.availability.stock > 0 && <InStockChip />}\r\n            </CardDes>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst ProdDetGrid = styled.div`\r\n    display: grid;\r\n    grid-template-areas: \r\n        'title title title title title'\r\n        'img   det   det   det   det  ';\r\n    width: 80%;\r\n    margin-top: -35px;\r\n`;\r\n\r\nconst Title: React.FC<{title: string}> = ({title}) => {\r\n    return (\r\n        <h1 style={{gridArea: 'title'}}>{title}</h1>\r\n    );\r\n}\r\n\r\nconst DetImage = styled.img`\r\n    grid-area: 'img';\r\n`;\r\n\r\nconst DetElement = styled.h1`\r\n    font-size: 18px;\r\n    color: gray;\r\n    display: flexbox;\r\n\r\n    & > span {\r\n        font-weight: bold;\r\n        color: black;\r\n    }\r\n`;\r\n\r\nconst ProdDet: React.FC<{product: ProductType | Omit<ProductType, \"variants\"> | undefined}> = ({ product }) => {\r\n    return (\r\n        <div>\r\n            <DetElement>Name: <span>{product ? product.name : \"\"}</span></DetElement>\r\n            <DetElement>Price: <span>{product ? product.price.current.value : \"\"}$</span></DetElement>\r\n            <DetElement>Stock: <span>{product ? product.availability.stock : \"\"}</span></DetElement>\r\n            <DetElement>UPC: <span>{product ? product.UPC : \"\"}</span></DetElement>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const ProductDetailsCard:\r\n    React.FC<{product: ProductType | Omit<ProductType, \"variants\"> | undefined}> = ({ product }) => {\r\n    return (\r\n        <div>\r\n            <ProdDetGrid>\r\n                <Title title={product ? product.name : \"\"} />\r\n                <DetImage alt={ `img${product?.UPC}` } src={`https://picsum.photos/800/400?random=${product?.UPC}`} />\r\n                <ProdDet product={product} />\r\n            </ProdDetGrid>\r\n        </div>\r\n    );\r\n}","import * as React from 'react';\r\nimport { ProductType } from '../model/models';\r\n\r\nexport const useProducts = () => {\r\n  const [products, setProducts] = React.useState<ProductType[]>([]);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\r\n      \"https://assets.fc-dev.instore.oakley.com/assets/products/products.json\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((products) => setProducts(products));\r\n  }, []);\r\n\r\n  return products;\r\n}","import * as React from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport { ProductDetailsCard } from './Product';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ProductType } from '../model/models';\r\nimport styled from 'styled-components';\r\nimport { useProducts } from './Functions';\r\n\r\nconst ExtGridDiv = styled.div`\r\n    min-height: 100vh;\r\n    position: relative;\r\n`;\r\n\r\nconst ContainerGrid = styled.div`\r\n    width: 97%;\r\n    margin: 16px auto 0 auto;\r\n    padding: 10px 20px;\r\n`;\r\n\r\nconst Title: React.FC = () => {\r\n    return (\r\n        <h3 style={{gridArea: 'title'}}>Available colors:</h3>\r\n    );\r\n}\r\n\r\nconst VariantGridDiv = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(8, 1fr);\r\n    row-gap: 15px;\r\n`;\r\n\r\nconst VariantImage = styled.img`\r\n    cursor: pointer;\r\n    width: 200px;\r\n    height: 100px;\r\n`;\r\n\r\nconst ProductDetails: React.FC = () => {\r\n    const { id } = useParams<{ id : string }>();\r\n    var product = useProducts().find((prod:ProductType) => prod.UPC===id);\r\n    const [variant, setVariant] = \r\n        React.useState<ProductType | Omit<ProductType, \"variants\">>();\r\n    const [temp, setTemp] = \r\n        React.useState<ProductType | Omit<ProductType, \"variants\"> | undefined>();\r\n\r\n    React.useEffect(() => {\r\n        setVariant(product);\r\n        setTemp(product);\r\n    }, [product]);\r\n\r\n    const VariantCard:React.FC<{product: ProductType | Omit<ProductType, \"variants\">}>=({product}) => {\r\n        return (\r\n            <VariantImage src={ `https://picsum.photos/800/400?random=${product.UPC}` }\r\n                onMouseEnter={ () => setVariant(product) }\r\n                onMouseLeave={ () => setVariant(temp) }\r\n                onClick={ () => setTemp(product) } />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ExtGridDiv>\r\n            <Header />\r\n            {product && variant ?\r\n            <ContainerGrid>    \r\n                <ProductDetailsCard product={variant} /> \r\n                <Title />\r\n                <VariantGridDiv>\r\n                    <VariantCard product={product} />\r\n                    {product?.variants?.map((prod) => \r\n                        <VariantCard product={prod} key={prod.UPC} />)}\r\n                </VariantGridDiv>\r\n            </ContainerGrid> : null}\r\n            <Footer />\r\n        </ExtGridDiv>\r\n    );\r\n}\r\n\r\nexport default ProductDetails;","import * as React from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport { ProductCard } from './Product';\r\nimport styled from 'styled-components';\r\nimport { ProductType } from '../model/models';\r\nimport { useSelector } from 'react-redux';\r\nimport { useProducts } from './Functions';\r\nimport { selectedFilterSelector, searchFilterSelector } from '../store/selectors';\r\n\r\nconst ExtGridDiv = styled.div`\r\n    min-height: 100vh;\r\n    position: relative;\r\n`;\r\n\r\nconst ContainerGrid = styled.div`\r\n    width: 99%;\r\n    margin: 16px auto 0 auto;\r\n    padding-bottom: 90px;\r\n`;\r\n\r\nconst ProdGridDiv = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    row-gap: 15px;\r\n`;\r\n\r\nconst ProductList: React.FC = () => {\r\n    const selected = useSelector(selectedFilterSelector);\r\n    const searchTerm = useSelector(searchFilterSelector);\r\n    const products = useProducts();\r\n\r\n    return (\r\n        <ExtGridDiv>\r\n            <Header />\r\n            <ContainerGrid>\r\n                <ProdGridDiv>\r\n                    {products && products\r\n                    .filter((product: ProductType)=>{\r\n                        switch(selected) {\r\n                        case \"in\":\r\n                            return product.availability.stock>0;\r\n                        case \"out\":\r\n                            return product.availability.stock<=0;\r\n                        default:\r\n                            return true;\r\n                        }\r\n                    })\r\n                    .filter((product: ProductType)=>{return product.name.toLowerCase().includes(searchTerm.toLowerCase())})\r\n                    .map((product: ProductType, _: number) => (\r\n                        <ProductCard product={product} key={product.UPC} />\r\n                    ))}\r\n                </ProdGridDiv>\r\n            </ContainerGrid>\r\n            <Footer />\r\n        </ExtGridDiv>\r\n    );\r\n}\r\n\r\nexport default ProductList;","import './App.css';\r\nimport Prova from './components/Prove';\r\nimport ProductDetails from './components/ProductDetails';\r\nimport PLP from './components/PLP';\r\nimport {\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/prod/:id\" component={ProductDetails} />\r\n      <Route path=\"/prova\" component={Prova} />\r\n      <Route exact path=\"/\" component={PLP} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport filterSlice from './actions';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    filterSlice\r\n  },\r\n})\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename='/ecommercestyle'>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}