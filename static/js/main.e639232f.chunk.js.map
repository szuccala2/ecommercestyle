{"version":3,"sources":["components/Product.tsx","components/ProductDetails.tsx","store/selectors.ts","store/actions.ts","components/Header.tsx","components/Footer.tsx","components/PLP.tsx","App.tsx","reportWebVitals.js","store/reducers.ts","store/store.ts","index.tsx"],"names":["Chip","styled","div","InStockChip","Card","CardDes","Text","p","Image","img","Product","prod","det","history","useHistory","onClick","push","UPC","src","alt","className","name","price","current","value","availability","stock","ProdGridDiv","ProductDetails","React","product","setProduct","id","useParams","fetch","then","res","json","products","find","selectSearchFilter","state","searchFilter","selectStockFilter","stockFilter","setStockFilter","type","setSearchFilter","SearchBarWrapper","Input","input","Label","label","ResetButton","button","RippleContainer","props","color","duration","Ripple","useState","rippleArray","setRippleArray","rippleCount","cleanUpFunction","useLayoutEffect","bounce","clearTimeout","setTimeout","useDebouncedRippleCleanUp","length","onMouseDown","event","rippleContainer","currentTarget","getBoundingClientRect","size","width","height","newRipple","x","pageX","y","pageY","map","ripple","index","style","top","left","SearchBox","searchTerm","useSelector","dispatch","useDispatch","ResetButtonWrapper","onChange","e","target","ToggleButton","ToggleButtonsWrapper","ToggleButtons","selected","GridDiv","BoxDiv","Header","Link","a","Footer","href","ExtGridDiv","ContainerGrid","ProductList","setProducts","filter","toLowerCase","includes","_","App","path","component","exact","PLP","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","action","store","createStore","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.e639232f.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ProductType } from '../model/models';\r\nimport styled from 'styled-components';\r\n\r\nconst Chip = styled.div`\r\n    background-color: rgb(204, 204, 204, 0.4);\r\n    padding: 8px 12px 8px 12px;\r\n    border-radius: 20px;\r\n    font-size: 13px;\r\n    width: 45px;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst InStockChip: React.FC = () => (\r\n    <Chip>\r\n        in stock\r\n    </Chip>\r\n)\r\n\r\nconst Card = styled.div`\r\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\r\n    width: 97%;\r\n    margin: 0 auto;\r\n    border-bottom-left-radius: 4px;\r\n    border-bottom-right-radius: 4px;\r\n    max-height: 62vh;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst CardDes = styled.div`\r\n    margin-top: -5px;\r\n    padding-left: 15px;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst Text = styled.p`\r\n    &.name {\r\n        font-family: Roboto, Helvetica, Arial, sans-serif;\r\n        margin: 0;\r\n        padding-top: 12px;\r\n        font-weight: 400;\r\n        font-size: 1.5rem;\r\n        line-height: 1.334;\r\n        letter-spacing: 0em;\r\n        padding-top: 12px;\r\n    }\r\n\r\n    &.price {\r\n        font-size: 20px;\r\n        color: grey;\r\n    }\r\n`;\r\n\r\nconst Image = styled.img`\r\n    width: 100%;\r\n    border-top-left-radius: 4px;\r\n    border-top-right-radius: 4px;\r\n`;\r\n\r\nconst Product: React.FC<{prod: ProductType, det: boolean}> = ({ prod, det }) => {\r\n    var history = useHistory();\r\n    return (\r\n        <Card onClick={()=>{det ? history.push('/') : history.push(`/prod/${prod.UPC}`)}}>\r\n            <Image src=\"https://via.placeholder.com/350\" alt=\"prodImg\" />\r\n            <CardDes>\r\n                <Text className=\"name\">{prod.name}</Text>\r\n                <Text className=\"price\">â‚¬{prod.price.current.value}</Text>\r\n                {prod.availability.stock > 0 && <InStockChip />}\r\n            </CardDes>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Product;","import * as React from 'react';\r\nimport Product from './Product';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ProductType } from '../model/models';\r\nimport styled from 'styled-components';\r\n\r\nconst ProdGridDiv = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 25% 25% 25% 25%;\r\n    row-gap: 15px;\r\n`;\r\n\r\nconst ProductDetails: React.FC = () => {\r\n    const [product, setProduct] = React.useState<ProductType>();\r\n    const { id } = useParams<{ id : string }>();\r\n\r\n    React.useEffect(() => {\r\n        fetch(\r\n          \"https://assets.fc-dev.instore.oakley.com/assets/products/products.json\"\r\n        )\r\n          .then((res) => res.json())\r\n          .then((products) => \r\n          setProduct(products.find((prod:ProductType) => prod.UPC===id)));\r\n    });\r\n\r\n    return product ? <ProdGridDiv><Product prod={product} det={true}/></ProdGridDiv> : null;\r\n}\r\n\r\nexport default ProductDetails;","import { stateModel } from '../model/models'\r\n\r\nexport const selectSearchFilter = (state: stateModel) => state.searchFilter;\r\n\r\nexport const selectStockFilter = (state: stateModel) => state.stockFilter;","import { stockFilter } from '../model/models';\r\n\r\ntype SetStockFilterAction = { type: 'SET_STOCK_FILTER', stockFilter: stockFilter};\r\nexport const setStockFilter = (stockFilter: stockFilter): SetStockFilterAction => ({\r\n  type: 'SET_STOCK_FILTER',\r\n  stockFilter\r\n});\r\n\r\ntype SetSearchFilterAction = { type: 'SET_SEARCH_FILTER', searchFilter: string };\r\nexport const setSearchFilter = (searchFilter: string): SetSearchFilterAction => ({\r\n  type: 'SET_SEARCH_FILTER',\r\n  searchFilter\r\n});\r\n\r\nexport type Action = SetSearchFilterAction | SetStockFilterAction;","import React, { useState, useLayoutEffect } from \"react\";\r\nimport styled from 'styled-components';\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectStockFilter, selectSearchFilter } from '../store/selectors';\r\nimport { setStockFilter, setSearchFilter } from  '../store/actions';\r\n\r\nconst SearchBarWrapper = styled.div`\r\n    position: relative;\r\n    margin-top: 8px;\r\n    margin-left: 10px;\r\n    display: flex;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    font-size: 17px;\r\n    padding: 10px;\r\n    display: block;\r\n    height: 34px;\r\n    width: 21vw;\r\n    border: 1px solid rgb(100,100,100,0.5);\r\n    border-radius: 3px;\r\n    &:focus {\r\n      outline: none;\r\n      border: 2px solid #1976D2;\r\n    }\r\n`;\r\n\r\nconst Label = styled.label`\r\n    color: gray;\r\n    font-size: 18px;\r\n    font-weight: normal;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    left: 13px;\r\n    top: 13px;\r\n    transition: 0.2s ease all;\r\n    ${Input}:focus ~ & {\r\n      top: -10px;\r\n      font-size: 13px;\r\n      color: #1976D2;\r\n      background-color: white;\r\n      width: 40px;\r\n      padding-left: 5px;\r\n    }\r\n\r\n    &.up {\r\n      top: -10px;\r\n      font-size: 13px;\r\n      color: #1976D2;\r\n      background-color: white;\r\n      width: 40px;\r\n      padding-left: 5px;\r\n    }\r\n`;\r\n\r\nconst ResetButton = styled.button `\r\n    background-color: rgb(25, 118, 210);\r\n    position: relative;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 15px;\r\n    border-radius: 3px;\r\n    font-size: 14px;\r\n    height: 35px;\r\n    margin-top: 8px;\r\n    margin-left: 15px;\r\n    cursor: pointer;\r\n    transition: 0.4s;\r\n    box-shadow: 1px 2px 2px -1px grey;\r\n\r\n    &:hover {\r\n      background-color: rgb(21, 101, 192);\r\n      box-shadow: 1px 2px 10px -1px grey;\r\n    }\r\n\r\n    &:active {\r\n      box-shadow: 0px 10px 15px -1px grey;\r\n      opacity: 0.7;\r\n      transition: 0.5s;\r\n    }\r\n`;\r\n\r\nconst RippleContainer = styled.div<any>`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  overflow: hidden;\r\n\r\n  span {\r\n    transform: scale(0);\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    opacity: 0.75;\r\n    background-color: ${props => props.color};\r\n    animation-name: ripple;\r\n    animation-duration: ${props => props.duration}ms;\r\n  }\r\n\r\n  @keyframes ripple {\r\n    to {\r\n      opacity: 0;\r\n      transform: scale(2);\r\n    }\r\n  }\r\n`;\r\n\r\nconst useDebouncedRippleCleanUp = (rippleCount: number, duration: number, cleanUpFunction:any) => {\r\n  useLayoutEffect(() => {\r\n    let bounce: any = null;\r\n    if (rippleCount > 0) {\r\n      clearTimeout(bounce);\r\n\r\n      bounce = setTimeout(() => {\r\n        cleanUpFunction();\r\n        clearTimeout(bounce);\r\n      }, duration * 4);\r\n    }\r\n\r\n    return () => clearTimeout(bounce);\r\n  }, [rippleCount, duration, cleanUpFunction]);\r\n};\r\n\r\nconst Ripple = ({ duration = 850, color = \"#fff\" }) => {\r\n  const [rippleArray, setRippleArray] = useState<any>([]);\r\n\r\n  useDebouncedRippleCleanUp(rippleArray.length, duration, () => {\r\n    setRippleArray([]);\r\n  });\r\n\r\n  const addRipple = (event:any) => {\r\n    const rippleContainer = event.currentTarget.getBoundingClientRect();\r\n    const size =\r\n      rippleContainer.width > rippleContainer.height\r\n        ? rippleContainer.width\r\n        : rippleContainer.height;\r\n    const x = event.pageX - rippleContainer.x - size / 2;\r\n    const y = event.pageY - rippleContainer.y - size / 2;\r\n    const newRipple = {\r\n      x,\r\n      y,\r\n      size\r\n    };\r\n\r\n    setRippleArray([...rippleArray, newRipple]);\r\n  };\r\n\r\n  return (\r\n    <RippleContainer duration={duration} color={color} onMouseDown={addRipple}>\r\n      {rippleArray.length > 0 &&\r\n        rippleArray.map((ripple:any, index:any) => {\r\n          return (\r\n            <span\r\n              key={\"span\" + index}\r\n              style={{\r\n                top: ripple.y,\r\n                left: ripple.x,\r\n                width: ripple.size,\r\n                height: ripple.size\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n    </RippleContainer>\r\n  );\r\n};\r\n\r\nRipple.propTypes = {\r\n  duration: PropTypes.number,\r\n  color: PropTypes.string\r\n};\r\n\r\nconst SearchBox: React.FC = () => {\r\n  const searchTerm = useSelector(selectSearchFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const ResetButtonWrapper: React.FC = () => {\r\n    return (\r\n    <ResetButton id=\"reset\" onClick={() => dispatch(setSearchFilter(\"\"))} >\r\n      RESET\r\n      <Ripple color=\"rgb(255,2555,255,0.5)\"/>\r\n    </ResetButton>\r\n  )};\r\n\r\n  return (\r\n  <SearchBarWrapper>\r\n    <Input value={searchTerm} onChange={(e) => dispatch(setSearchFilter(e.target.value))} />\r\n    <Label className={searchTerm===\"\" ? \"\" : \"up\"}>search</Label>\r\n    <ResetButtonWrapper />\r\n  </SearchBarWrapper>\r\n)};\r\n\r\nconst ToggleButton = styled.button`\r\n  background-color: white;\r\n  color: rgb(21, 101, 192, 0.9);\r\n  padding: 10px 15px;\r\n  box-shadow: 0px 1.5px #888888;\r\n  font-weight: 500;\r\n  font-size: 0.875rem;\r\n  height: 36px;\r\n  min-width: 64px;\r\n  padding: 5px 15px;\r\n  line-height: 1.75;\r\n  letter-spacing: 0.02857em;\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &.in {\r\n    border-top-left-radius: 4px;\r\n    border-bottom-left-radius: 4px;\r\n    border: 1px solid rgb(21, 101, 192);\r\n  }\r\n\r\n  &.out {\r\n    border-top-right-radius: 4px;\r\n    border-bottom-right-radius: 4px;\r\n    border: 1px solid rgb(21, 101, 192, 0.5);\r\n  }\r\n\r\n  &:hover {\r\n    background-color: rgb(21, 101, 192, 0.1);\r\n    cursor: pointer;\r\n    border: 1px solid rgb(21, 101, 192);\r\n  }\r\n\r\n  &.active {\r\n    background-color: rgb(21, 101, 192, 0.9);\r\n    color: white;\r\n\r\n    &:hover {\r\n      background-color: rgb(21, 101, 192);\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1230px) {\r\n    height: 72px;\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nconst ToggleButtonsWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 22px;\r\n\r\n  @media (max-width: 1230px) {\r\n    margin: 5px;\r\n  }\r\n`;\r\n\r\nconst ToggleButtons: React.FC = () => {\r\n  const selected = useSelector(selectStockFilter);\r\n  const dispatch = useDispatch();\r\n  \r\n  return (\r\n  <ToggleButtonsWrapper>\r\n    <ToggleButton className={selected===\"in\" ? \"in active\" : \"in\"}\r\n      onClick={() => \r\n        selected === \"in\"\r\n        ? dispatch(setStockFilter(\"none\"))\r\n        : dispatch(setStockFilter(\"in\"))}\r\n    >IN STOCK<Ripple/></ToggleButton>\r\n    <ToggleButton className={selected===\"out\" ? \"out active\" : \"out\"}\r\n      onClick={() => \r\n        selected === \"out\"\r\n        ? dispatch(setStockFilter(\"none\"))\r\n        : dispatch(setStockFilter(\"out\"))}\r\n    >OUT OF STOCK<Ripple/></ToggleButton>\r\n  </ToggleButtonsWrapper>\r\n)};\r\n\r\nconst GridDiv = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 30% 35% 35%;\r\n`;\r\n\r\nconst BoxDiv = styled.div`\r\n  border-bottom: 1px solid black;\r\n`;\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <BoxDiv>\r\n      <GridDiv>\r\n        <img src=\"https://via.placeholder.com/150x80\" alt=\"logo\" />\r\n        <ToggleButtons />\r\n        <SearchBox />\r\n      </GridDiv>\r\n    </BoxDiv>\r\n  );\r\n}\r\n\r\nexport default Header;","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst BoxDiv = styled.div`\r\n    background-color: darkgray;\r\n    text-align: right;\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n    padding: 25px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Link = styled.a`\r\n    color: blue;\r\n    text-decoration: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n  \r\nconst Footer: React.FC = () => {\r\n    return (\r\n        <BoxDiv>\r\n            <Link href='https://static.wikia.nocookie.net/5ef5d627-c162-4309-ab47-e09f6b411883'>\r\n                TWITTER</Link> | \r\n            <Link href='https://i.pinimg.com/originals/d8/90/92/d890923215813484bdc0f9544aeca1a9.gif'>\r\n                FACEBOOK</Link>\r\n        </BoxDiv>\r\n    );\r\n}\r\n\r\nexport default Footer;","import * as React from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Product from './Product';\r\nimport styled from 'styled-components';\r\nimport { ProductType } from '../model/models';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectSearchFilter, selectStockFilter } from '../store/selectors';\r\n\r\nconst ExtGridDiv = styled.div`\r\n    min-height: 100vh;\r\n    position: relative;\r\n`;\r\n\r\nconst ContainerGrid = styled.div`\r\n    width: 99%;\r\n    margin: 16px auto 0 auto;\r\n    padding-bottom: 90px;\r\n`;\r\n\r\nconst ProdGridDiv = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 25% 25% 25% 25%;\r\n    row-gap: 15px;\r\n`;\r\n\r\nconst ProductList: React.FC = () => {\r\n    const [products, setProducts] = React.useState<ProductType[]>([]);\r\n\r\n    const selected = useSelector(selectStockFilter);\r\n    const searchTerm = useSelector(selectSearchFilter);\r\n\r\n    React.useEffect(() => {\r\n        fetch(\r\n          \"https://assets.fc-dev.instore.oakley.com/assets/products/products.json\"\r\n        )\r\n          .then((res) => res.json())\r\n          .then((products) => setProducts(products));\r\n    }, []);\r\n\r\n    return (\r\n        <ExtGridDiv>\r\n            <Header />\r\n            <ContainerGrid>\r\n                <ProdGridDiv>\r\n                    {products && products\r\n                    .filter((prod)=>{\r\n                        switch(selected) {\r\n                        case \"in\":\r\n                            return prod.availability.stock>0;\r\n                        case \"out\":\r\n                            return prod.availability.stock<=0;\r\n                        default:\r\n                            return true;\r\n                        }\r\n                    })\r\n                    .filter((prod)=>{return prod.name.toLowerCase().includes(searchTerm.toLowerCase())})\r\n                    .map((prod,_) => (\r\n                        <Product prod={prod} det={false} key={prod.UPC} />\r\n                    ))}\r\n                </ProdGridDiv>\r\n            </ContainerGrid>\r\n            <Footer />\r\n        </ExtGridDiv>\r\n    );\r\n}\r\n\r\nexport default ProductList;","import './App.css';\r\nimport ProductDetails from './components/ProductDetails';\r\nimport PLP from './components/PLP';\r\nimport {\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/prod/:id\" component={ProductDetails} />\r\n      <Route exact path=\"/\" component={PLP} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Action } from './actions';\r\nimport { stateModel } from '../model/models';\r\n\r\nconst reducer = (state: stateModel = { stockFilter: \"none\", searchFilter: \"\" }, action: Action) => {\r\n    switch(action.type) {\r\n        case 'SET_STOCK_FILTER':\r\n            return {\r\n                ...state,\r\n                stockFilter: action.stockFilter\r\n            };\r\n        case 'SET_SEARCH_FILTER':\r\n            return {\r\n                ...state,\r\n                searchFilter: action.searchFilter\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename='/ecommercestyle'>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}